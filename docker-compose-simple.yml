services:
  localstack:
    image: localstack/localstack:3.0
    container_name: lambda-alb-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=lambda,elasticloadbalancing,iam,logs,ec2
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=false
      - LAMBDA_DOCKER_NETWORK=bridge
      - PERSISTENCE=0
      - HOSTNAME_EXTERNAL=localhost
      - AWS_DEFAULT_REGION=us-east-1
      - DISABLE_CORS_CHECKS=1
      - DISABLE_CUSTOM_CORS=1
      - SKIP_SSL_CERT_DOWNLOAD=1
      - EAGER_SERVICE_LOADING=1
      - LAMBDA_RUNTIME_EXECUTOR=docker
      - LAMBDA_FALLBACK_URL=http://host.docker.internal:4566
      # - LAMBDA_DOCKER_DNS=8.8.8.8
      # - LAMBDA_DOCKER_FLAGS=-p 127.0.0.1:9001:9001 --add-host=host.docker.internal:host-gateway --network=localstack-network --dns=8.8.8.8 --dns-search=. --ulimit nofile=65536:65536 --security-opt seccomp=unconfined --platform=linux/amd64
      - LAMBDA_DOCKER_CMD=docker
      - LAMBDA_DOCKER_IMAGE=localstack/lambda:provided.al2
      - LAMBDA_DOCKER_USE_SOCKET=false
      - LAMBDA_INIT_USER=root
      # Proxy settings - use host proxy
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - NO_PROXY=${NO_PROXY}
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - localstack-network

networks:
  localstack-network:
    driver: bridge 